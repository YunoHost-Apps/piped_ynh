packaging_format = 2

id = "piped"
name = "Piped"

description.en = "An open-source alternative frontend for YouTube which is efficient by design."
description.fr = "An open-source alternative frontend for YouTube which is efficient by design."

version = "2024.01.21~ynh1"

maintainers = ["orhtej2"]

[upstream]
license = "GNU AFFERO GPL"
website = "https://docs.piped.video/"
demo = "https://piped.video/"
admindoc = "https://docs.piped.video/docs/"

code = "https://github.com/TeamPiped/Piped"

[integration]
yunohost = '>= 11.2'
architectures = "all" # TODO : handle the "all" option (no ["all"])
multi_instance = true ldap = "not_relevant" # TODO : fixme, use actual booleans + handle the "not_relevant" value
sso = "not_relevant"
# FIXME: replace with an **estimate** minimum disk and RAM requirements. e.g. 20M, 400M, 1G... You may have have a look at CI results
disk = "50M"
ram.build = "50M"
ram.runtime = "50M"

[install]

    [install.domain]
    type = "domain"

    [install.init_main_permission]
    type = "group"
    default = "visitors"

[resources]

    [resources.sources]

        [resources.sources.main]
        # This will pre-fetch the asset which can then be deployed during the install/upgrade scripts with :
        #    ynh_setup_source --dest_dir="$install_dir"
        # You can also define other assets than "main" and add --source_id="foobar" in the previous command
        url = "https://codeload.github.com/TeamPiped/Piped/zip/11610d545cb08c87e4ae1c415f4acc2b37d0f789"
        sha256 = "11610d545cb08c87e4ae1c415f4acc2b37d0f7891234567890-1231234567890"

        # These infos are used by https://github.com/YunoHost/apps/blob/master/tools/autoupdate_app_sources/autoupdate_app_sources.py
        # to auto-update the previous asset urls and sha256sum + manifest version
        # assuming the upstream's code repo is on github and relies on tags or releases
        # See the 'sources' resource documentation for more details

        autoupdate.strategy = "latest_github_tag"

    [resources.system_user]

    [resources.install_dir]

    [resources.permissions]
    main.url = "/"

    [resources.ports]
